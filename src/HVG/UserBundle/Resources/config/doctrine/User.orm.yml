HVG\UserBundle\Entity\User:
    type: entity
    table: User
    repositoryClass: HVG\UserBundle\Entity\UserRepository
    id:
        id:
            type: integer
            id: true
            generator:
                strategy: AUTO
    manyToOne:
        person:
            targetEntity: HVG\SystemBundle\Entity\Person
    manyToMany:
        areas:
            targetEntity: HVG\SystemBundle\Entity\Area
            inversedBy: users
            joinTable:
                name: users_areas
                joinColumns:
                    user_id:
                        referencedColumnName: id
                inverseJoinColumns:
                    area_id:
                        referencedColumnName: id
        communities:
            targetEntity: HVG\SystemBundle\Entity\Community
            inversedBy: users
            joinTable:
                name: users_communities
                joinColumns:
                    user_id:
                        referencedColumnName: id
                inverseJoinColumns:
                    community_id:
                        referencedColumnName: id
    oneToMany:
        tickets:
            targetEntity: HVG\SystemBundle\Entity\Ticket
            mappedBy: user
        ticketactions:
            targetEntity: HVG\SystemBundle\Entity\TicketAction
            mappedBy: user
        ticketsassigned:
            targetEntity: HVG\SystemBundle\Entity\Ticket
            mappedBy: liability
        petitionactions:
            targetEntity: HVG\SystemBundle\Entity\PetitionAction
            mappedBy: user
        petitionevaluations:
            targetEntity: HVG\SystemBundle\Entity\PetitionEvaluation
            mappedBy: user
        petitions:
            targetEntity: HVG\SystemBundle\Entity\Petition
            mappedBy: user
        petitionsassigned:
            targetEntity: HVG\SystemBundle\Entity\Petition
            mappedBy: liability
    fields:
        createdAt:
            type: datetime
            gedmo:
                timestampable:
                    on: create
        updatedAt:
            type: datetime
            gedmo:
                timestampable:
                    on: update
        deletedAt:
            type: datetime
            nullable: true
    gedmo:
        soft_deleteable:
            field_name: deletedAt
            time_aware: false
    lifecycleCallbacks: {  }